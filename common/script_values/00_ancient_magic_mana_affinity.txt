#Author: Donekulda
#Desc: Every being has some mana affinity which states how their body is affected by mana, 
#beings with higher mana affinity can store much more mana in their cells can more easily access it

###################
# Affinity levels:
###################
# 0 - 5: mortal (mundane being with near no magical talents: normal humans, animals)
mundane_mana_affinity_level = 5
# 5 - 10: sub-magical (Beings that sometimes have some nutural born magical abbilities: Sorcerers, sub-magical beasts)
sub_magical_mana_affinity_level = 10
# 10 - 15: magical (Beings born with some megical talents: Elves, Goblins, Megical Beasts)
magical_mana_affinity_level = 15
# 15 - 20: Loved by mana (High Elves)
loved_mana_affinity_level = 20
# 20 - 25: Demigod (Being that can control mana just like breating: Ancient Dragons, Angels, Demons and etc.)
demigod_mana_affinity_level = 25
# 25 - 30: Godly (ones body is nearly made out of mana)
god_mana_affinity_level = 30
#########################################################################################################################
#########################################################################################################################

###########################
# Affinity from Bloodlines
###########################
#Dragonic Bloodline -> Dragons - Descendants of ancient dragons use magic for their survival and growth
dragonic_bloodline_affinity_boost = 7
#Giant Bloodline -> Giants - Creatures that use mana for growth of their muscles and bodies
giant_bloodline_affinity_boost = 2
#Antler Bloodline -> Antlers - Mystical Deers which use mana for their defence
antler_bloodline_affinity_boost = 4

#########################################################################################################################
#########################################################################################################################

mana_affinity = {
	value = 0
	
	add = {
		if = { # Checks if the character has base value varibale if not give 0
			limit = {
				has_variable = base_mana_affinity
			}
			value = var:base_mana_affinity
		}
		else = {
			value = 0
		}
		desc = MANA_AFFINITY_BASE
		format = "BASE_VALUE_FORMAT"
	}
	
	#Bloodlines
	if = {
		limit = {
			has_trait = dragonic_bloodline
		}
		add = {
			value = dragonic_bloodline_affinity_boost
			desc = MANA_AFFINITY_DRAGONIC_BLOODLINE
			format = "FORMAT_MANA_AFFINITY_BOOST"
		}
	}
	else_if = {
		limit = {
			has_trait = antler_bloodline
		}
		add = {
			value = antler_bloodline_affinity_boost
			desc = MANA_AFFINITY_ANTLER_BLOODLINE
			format = "FORMAT_MANA_AFFINITY_BOOST"
		}
	}
	else_if = {
		limit = {
			has_trait = giant_bloodline
		}
		add = {
			value = giant_bloodline_affinity_boost
			desc = MANA_AFFINITY_GIANT_BLOODLINE
			format = "FORMAT_MANA_AFFINITY_BOOST"
		}
	}

	#infused blood
	if = {
		limit = {
			has_trait = infused_magical_blood_compatible
		}
		add = {
			value = 3
			desc = MANA_AFFINITY_INFUSED_BLOOD
			format = "FORMAT_MANA_AFFINITY_BOOST"
		}
	}
	else_if = {
		limit = {
			has_trait = infused_magical_blood_incompatible
		}
		add = {
			value = 1
			desc = MANA_AFFINITY_INFUSED_BLOOD
			format = "FORMAT_MANA_AFFINITY_BOOST"
		}
	}
}

base_mana_affinity_bonus = { #Script value that gives out bonus to base mana affinity
	value = 0
	
	if = { # If dynasty has perk of Powerful Blood
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_perk = arcane_legacy_1 }
			OR = {
				scope:mother.dynasty = dynasty
				scope:real_father.dynasty = dynasty
			}
		}
		add = 1
	}
	
	if = { # If dynasty has perk arcane_legacy_4
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_perk = arcane_legacy_4 }
			OR = {
				scope:mother.dynasty = dynasty
				scope:real_father.dynasty = dynasty
			}
		}
		add = 2
	}
}

mother_base_affinity = {
	value = 0
	if = {
		limit = {
			always = no # we don't know what we want the formula to look like, yet, so for now we just want to make sure the effect works
						# once we know what we want the formula to be, we can add it back in
			exists = mother
			mother = { is_alive = yes has_variable = base_mana_affinity }
		}
		
		if = {
			limit = { mother = { is_magus_trigger = yes } } # scope change works because we're in a limit, which is a trigger block
			add = {
				value = mother.mage_level
				divide = {
					value = mother.mana_affinity
					multiply = 5
				}
				subtract = { # To make it harder to increase on higher levels using mage level and to lower it if the mage level is low
					value = mother.mana_affinity
					divide = 5 # use of 5 because the tiers are per five and because mundanes are first 5
				}
			}
		}
		else = { #if one isnt practicing magic their mana affinity could lower, this is mainly so for those of higher levels
			subtract = {
				value = mother.mana_affinity
				divide = 5
			}
		}
	}
	# remove this once we figure out what the formula should be, or are actually testing *just* the formula
	#value = mother.mana_affinity # will break if the character has no mother, but this is just a temporary thing while we test the effect
}

father_base_affinity = {
	value = 0
	if = {
		limit = {
			always = no # we don't know what we want the formula to look like, yet, so for now we just want to make sure the effect works
						# once we know what we want the formula to be, we can add it back in
			exists = father
			father = { is_alive = yes has_variable = base_mana_affinity }
		}
		
		if = {
			limit = { father = { is_magus_trigger = yes } } # scope change works because we're in a limit, which is a trigger block
			add = {
				value = father.mage_level
				divide = {
					value = father.mana_affinity
					multiply = 5
				}
				subtract = { # To make it harder to increase on higher levels using mage level and to lower it if the mage level is low
					value = father.mana_affinity
					divide = {
						value = 5 # use of 5 because the tiers are per five and because mundanes are first 5
						multiply = 2 # as its father so should the effect factor of lowering be lower 
					}
				}
			}
		}
		else = { #if one isnt practicing magic their mana affinity could lower, this is mainly so for those of higher levels
			subtract = {
				value = father.mana_affinity
				divide = 5
			}
		}
	}
	
	# remove this once we figure out what the formula should be, or are actually testing *just* the formula
	#value = father.mana_affinity # will break if the character has no father, but this is just a temporary thing while we test the effect
}


max_body_mana = { #Mana Affinity affects how much can ones body hold mana
	value = mana_affinity
	multiply = 50
	multiply = mage_level
}