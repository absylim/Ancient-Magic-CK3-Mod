## Integer literals
# NOTE: '_gen_cost' is a misnomer. Positive values increase gen, negative values decrease it
# It's baked into the UI now, though, so I don't wanna change it at this point

# Perk _gen_costs
time_mage_perk_gen_cost = 2
glimpse_the_future_perk_gen_cost = 2
financial_times_perk_gen_cost = 2
celerity_perk_gen_cost = 2
mass_celerity_perk_gen_cost = 2
slowness_perk_gen_cost = 2
mass_slowness_perk_gen_cost = 2
temporal_manipulation_perk_gen_cost = 2
master_of_time_perk_gen_cost = 2
life_mage_perk_gen_cost = 2
inward_reflection_perk_gen_cost = 2
inward_perfection_perk_gen_cost = 2
heal_perk_gen_cost = 2
greater_heal_perk_gen_cost = 2
battlefield_life_mage_perk_gen_cost = 2
greater_battlefield_life_mage_perk_gen_cost = 2
purity_of_body_perk_gen_cost = 2
avatar_of_life_perk_gen_cost = 2
elemental_mage_perk_gen_cost = 2
flame_aura_perk_gen_cost = 2
flaming_weapons_perk_gen_cost = 2
living_earthworks_perk_gen_cost = 2
golem_creation_perk_gen_cost = 2
control_water_perk_gen_cost = 2
drought_perk_gen_cost = 2
elemental_warrior_perk_gen_cost = 2
lord_of_the_elements_perk_gen_cost = 2
death_mage_perk_gen_cost = 2
inflict_illness_perk_gen_cost = 2
plague_lord_perk_gen_cost = 2
aura_of_death_perk_gen_cost = 2
necromancy_perk_gen_cost = 2
drain_life_perk_gen_cost = 2
death_stare_perk_gen_cost = 2
blight_perk_gen_cost = 2
deacon_of_death_perk_gen_cost = 2
biomancy_mage_perk_gen_cost = 2
improve_trait_perk_gen_cost = 2
perfect_trait_perk_gen_cost = 2
fertility_control_perk_gen_cost = 2
impregnate_perk_gen_cost = 2
weaken_trait_perk_gen_cost = 2
criple_trait_perk_gen_cost = 2
sculpter_of_flesh_perk_gen_cost = 2
architect_of_bloodlines_perk_gen_cost = 2
domination_mage_perk_gen_cost = 2
entrance_perk_gen_cost = 2
incite_lust_perk_gen_cost = 2
incite_obedience_perk_gen_cost = 2
dominate_perk_gen_cost = 2
beguiling_aura_perk_gen_cost = 2
friendship_perk_gen_cost = 2
enchanting_aura_perk_gen_cost = 2
master_of_puppets_perk_gen_cost = 2

# Misc _gen_costs
magic_potential_1_gen_cost = 10
magic_potential_2_gen_cost = 20
magic_potential_3_gen_cost = 30
mana_gen_per_magic_circle = 30
mana_gen_lifestyle = 100
mana_gen_legacy_2 = 10
mana_devouring_1_gen_cost = -150
mana_devouring_2_gen_cost = -150

# Perk _max_manas
time_mage_perk_max_mana = 30
glimpse_the_future_perk_max_mana = 30
financial_times_perk_max_mana = 30
celerity_perk_max_mana = 30
mass_celerity_perk_max_mana = 30
slowness_perk_max_mana = 30
mass_slowness_perk_max_mana = 30
temporal_manipulation_perk_max_mana = 30
master_of_time_perk_max_mana = 30
life_mage_perk_max_mana = 30
inward_reflection_perk_max_mana = 30
inward_perfection_perk_max_mana = 30
heal_perk_max_mana = 30
greater_heal_perk_max_mana = 30
battlefield_life_mage_perk_max_mana = 30
greater_battlefield_life_mage_perk_max_mana = 30
purity_of_body_perk_max_mana = 30
avatar_of_life_perk_max_mana = 30
elemental_mage_perk_max_mana = 30
flame_aura_perk_max_mana = 30
flaming_weapons_perk_max_mana = 30
living_earthworks_perk_max_mana = 30
golem_creation_perk_max_mana = 30
control_water_perk_max_mana = 30
drought_perk_max_mana = 30
elemental_warrior_perk_max_mana = 30
lord_of_the_elements_perk_max_mana = 30
death_mage_perk_max_mana = 30
inflict_illness_perk_max_mana = 30
plague_lord_perk_max_mana = 30
aura_of_death_perk_max_mana = 30
necromancy_perk_max_mana = 30
drain_life_perk_max_mana = 30
death_stare_perk_max_mana = 30
blight_perk_max_mana = 30
deacon_of_death_perk_max_mana = 30
biomancy_mage_perk_max_mana = 30
improve_trait_perk_max_mana = 30
perfect_trait_perk_max_mana = 30
fertility_control_perk_max_mana = 30
impregnate_perk_max_mana = 30
weaken_trait_perk_max_mana = 30
criple_trait_perk_max_mana = 30
sculpter_of_flesh_perk_max_mana = 30
architect_of_bloodlines_perk_max_mana = 30
domination_mage_perk_max_mana = 30
entrance_perk_max_mana = 30
incite_lust_perk_max_mana = 30
incite_obedience_perk_max_mana = 30
dominate_perk_max_mana = 30
beguiling_aura_perk_max_mana = 30
friendship_perk_max_mana = 30
enchanting_aura_perk_max_mana = 30
master_of_puppets_perk_max_mana = 30

# Misc _max_manas
max_mana_legacy_3 = 100
max_mana_per_perk = 30
max_mana_per_potency = 100

# MAA-summoning spell amounts
stone_golems_maa_stack_amount = 20
lava_golems_maa_stack_amount = 1
lesser_undead_maa_stack_amount = 200

# Misc
mage_level_legacy_4 = 1

# No-brainer value in a magic mod.
# Uses - Is a character even possibly a mage? 'mage_potency > 0' Is the character not a mage? 'mage_potency < 1' How much potential does this mage have? 'mage_potency >= x'
mage_potency = {
	value = 0
	if = { limit = { has_trait = magic_potential_1 } value = 1 }
	else_if = { limit = { has_trait = magic_potential_2 } value = 2 }
	else_if = { limit = { has_trait = magic_potential_3 } value = 3 }
}

# No-brainer value in a magic mod.
# Uses - Is a character even possibly educated? 'mage_education > 0' Is the character not educated? 'mage_education < 1' How much education does this mage have? 'mage_education >= x'
mage_education = { # UNCOMMENT WHEN SYSTEM IN PLACE!!!
	value = 0
	if = { limit = { has_trait = education_arcane_1 } value = 1 }
	else_if = { limit = { has_trait = education_arcane_2 } value = 2 }
	else_if = { limit = { has_trait = education_arcane_3 } value = 3 }
	else_if = { limit = { has_trait = education_arcane_4 } value = 4 }
}

mage_level_internal_helper = {
	value = var:mage_xp
	divide = 1000
}

mage_level_internal = {
	value = mage_level_internal_helper.tri
}

mage_level = {
	value = mage_level_internal.inc
	if = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_perk = arcane_legacy_4 }
		}
		add = 1
	}
}

mage_xp_display = {
	value = mage_level_internal.sum_n.neg
	multiply = 1000
	add = var:mage_xp
}

mage_xp_to_next_level = {
	value = mage_level_internal.inc
	multiply = 1000
}

magic_circles_owned_by_character = {
	value = 0
	every_directly_owned_province = {
		if = {
			limit = { has_building = ancient_magic_mana_circle_01 }
			add = 1
		}
		if = {
			limit = { has_building = ancient_magic_mana_circle_02 }
			add = 2
		}
		if = {
			limit = { has_building = ancient_magic_mana_circle_03 }
			add = 3
		}
	}
}

ancient_magic_mana_gen = {
	value = 0
	add = ancient_magic_mana_gen_gen_only
	add = ancient_magic_mana_gen_drain_only
}

ancient_magic_mana_gen_gen_only = {
	value = 0
	add = ancient_magic_mana_gen_perks
	add = ancient_magic_mana_gen_potency
	add = ancient_magic_mana_gen_circles
	add = ancient_magic_mana_gen_lifestyle
	add = ancient_magic_mana_gen_legacy
}

ancient_magic_mana_gen_potency = {
	value = 0
	if = { limit = { has_trait = magic_potential_1 } add = magic_potential_1_gen_cost }
	else_if = { limit = { has_trait = magic_potential_2 } add = magic_potential_2_gen_cost }
	else_if = { limit = { has_trait = magic_potential_3 } add = magic_potential_3_gen_cost }
}

ancient_magic_mana_gen_circles = {
	value = magic_circles_owned_by_character
	multiply = mana_gen_per_magic_circle
}

ancient_magic_mana_gen_lifestyle = {
	value = 0
	if = {
		limit = { has_focus = magic_mana_focus }
		add = mana_gen_lifestyle
	}
}

ancient_magic_mana_gen_legacy = {
	value = 0
	if = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_perk = arcane_legacy_2 }
		}
		add = mana_gen_legacy_2
	}
}

ancient_magic_mana_gen_drain_only = {
	add = ancient_magic_mana_drain_auras
	add = ancient_magic_mana_drain_lifestyle
	add = ancient_magic_mana_drain_disease
}

ancient_magic_mana_drain_auras = {
	value = 0
	add = glimpse_the_future_spell_gen_cost
	add = financial_times_spell_gen_cost
	add = celerity_spell_gen_cost
	add = mass_celerity_spell_gen_cost
	add = slowness_spell_gen_cost
	add = mass_slowness_spell_gen_cost
	add = temporal_manipulation_spell_gen_cost
	add = haste_spell_gen_cost
	add = master_of_time_spell_gen_cost
	add = flame_aura_spell_gen_cost
	add = flaming_weapons_spell_gen_cost
	add = living_earthworks_spell_gen_cost
	add = control_water_spell_gen_cost
	add = drought_spell_gen_cost
	add = elemental_warrior_spell_gen_cost
	add = aura_of_death_spell_gen_cost
	add = blight_spell_gen_cost
	add = fertility_control_spell_gen_cost
	add = beguiling_aura_spell_gen_cost
	add = enchanting_aura_spell_gen_cost
}

ancient_magic_mana_drain_lifestyle = {
	value = 0
	if = {
		limit = { has_focus = magic_arcana_focus }
		subtract = mana_gen_lifestyle
	}
}

ancient_magic_mana_drain_disease = {
	value = 0
	if = {
		limit = { has_trait = mana_devouring_1 }
		add = mana_devouring_1_gen_cost
	}
	else_if = {
		limit = { has_trait = mana_devouring_2 }
		add = mana_devouring_2_gen_cost
	}
}

ancient_magic_max_mana = {
	value = ancient_magic_max_mana_perks
	add = {
		value = mage_potency
		multiply = max_mana_per_potency
	}
	if = {
		limit = {
			exists = dynasty
			dynasty = { has_dynasty_perk = arcane_legacy_3 }
		}
		add = max_mana_legacy_3
	}
}

# Note: This value is a work-around for 'consume life' not giving the 'drained' modifier
# 	    for the correct number of years. Removing it will break that spell!
############################################################################################
spell_caster_mage_level = {
	value = scope:spell_caster.mage_level
}

# Note: This value is a work-around for perks firing 'change_mage_perks'
# 	    more times than they should. Removing it will break everything!
############################################################################################
ancient_magic_mana_gen_perks = {
	value = 0
	# Time tree
	add = { value = time_mage_perk_bit multiply = time_mage_perk_gen_cost }
	add = { value = glimpse_the_future_perk_bit multiply = glimpse_the_future_perk_gen_cost }
	add = { value = financial_times_perk_bit multiply = financial_times_perk_gen_cost }
	add = { value = celerity_perk_bit multiply = celerity_perk_gen_cost }
	add = { value = mass_celerity_perk_bit multiply = mass_celerity_perk_gen_cost }
	add = { value = slowness_perk_bit multiply = slowness_perk_gen_cost }
	add = { value = mass_slowness_perk_bit multiply = mass_slowness_perk_gen_cost }
	add = { value = temporal_manipulation_perk_bit multiply = temporal_manipulation_perk_gen_cost }
	add = { value = master_of_time_perk_bit multiply = master_of_time_perk_gen_cost }

	# Life tree
	add = { value = life_mage_perk_bit multiply = life_mage_perk_gen_cost }
	add = { value = inward_reflection_perk_bit multiply = inward_reflection_perk_gen_cost }
	add = { value = inward_perfection_perk_bit multiply = inward_perfection_perk_gen_cost }
	add = { value = heal_perk_bit multiply = heal_perk_gen_cost }
	add = { value = greater_heal_perk_bit multiply = greater_heal_perk_gen_cost }
	add = { value = battlefield_life_mage_perk_bit multiply = battlefield_life_mage_perk_gen_cost }
	add = { value = greater_battlefield_life_mage_perk_bit multiply = greater_battlefield_life_mage_perk_gen_cost }
	add = { value = purity_of_body_perk_bit multiply = purity_of_body_perk_gen_cost }
	add = { value = avatar_of_life_perk_bit multiply = avatar_of_life_perk_gen_cost }

	# Elemental tree
	add = { value = elemental_mage_perk_bit multiply = elemental_mage_perk_gen_cost }
	add = { value = flame_aura_perk_bit multiply = flame_aura_perk_gen_cost }
	add = { value = flaming_weapons_perk_bit multiply = flaming_weapons_perk_gen_cost }
	add = { value = living_earthworks_perk_bit multiply = living_earthworks_perk_gen_cost }
	add = { value = golem_creation_perk_bit multiply = golem_creation_perk_gen_cost }
	add = { value = control_water_perk_bit multiply = control_water_perk_gen_cost }
	add = { value = drought_perk_bit multiply = drought_perk_gen_cost }
	add = { value = elemental_warrior_perk_bit multiply = elemental_warrior_perk_gen_cost }
	add = { value = lord_of_the_elements_perk_bit multiply = lord_of_the_elements_perk_gen_cost }

	# Death tree
	add = { value = death_mage_perk_bit multiply = death_mage_perk_gen_cost }
	add = { value = inflict_illness_perk_bit multiply = inflict_illness_perk_gen_cost }
	add = { value = plague_lord_perk_bit multiply = plague_lord_perk_gen_cost }
	add = { value = aura_of_death_perk_bit multiply = aura_of_death_perk_gen_cost }
	add = { value = necromancy_perk_bit multiply = necromancy_perk_gen_cost }
	add = { value = drain_life_perk_bit multiply = drain_life_perk_gen_cost }
	add = { value = death_stare_perk_bit multiply = death_stare_perk_gen_cost }
	add = { value = blight_perk_bit multiply = blight_perk_gen_cost }
	add = { value = deacon_of_death_perk_bit multiply = deacon_of_death_perk_gen_cost }

	# Biomancy tree
	add = { value = biomancy_mage_perk_bit multiply = biomancy_mage_perk_gen_cost }
	add = { value = improve_trait_perk_bit multiply = improve_trait_perk_gen_cost }
	add = { value = perfect_trait_perk_bit multiply = perfect_trait_perk_gen_cost }
	add = { value = fertility_control_perk_bit multiply = fertility_control_perk_gen_cost }
	add = { value = impregnate_perk_bit multiply = impregnate_perk_gen_cost }
	add = { value = weaken_trait_perk_bit multiply = weaken_trait_perk_gen_cost }
	add = { value = criple_trait_perk_bit multiply = criple_trait_perk_gen_cost }
	add = { value = sculpter_of_flesh_perk_bit multiply = sculpter_of_flesh_perk_gen_cost }
	add = { value = architect_of_bloodlines_perk_bit multiply = architect_of_bloodlines_perk_gen_cost }

	# Domination tree
	add = { value = domination_mage_perk_bit multiply = domination_mage_perk_gen_cost }
	add = { value = entrance_perk_bit multiply = entrance_perk_gen_cost }
	add = { value = incite_lust_perk_bit multiply = incite_lust_perk_gen_cost }
	add = { value = incite_obedience_perk_bit multiply = incite_obedience_perk_gen_cost }
	add = { value = dominate_perk_bit multiply = dominate_perk_gen_cost }
	add = { value = beguiling_aura_perk_bit multiply = beguiling_aura_perk_gen_cost }
	add = { value = friendship_perk_bit multiply = friendship_perk_gen_cost }
	add = { value = enchanting_aura_perk_bit multiply = enchanting_aura_perk_gen_cost }
	add = { value = master_of_puppets_perk_bit multiply = master_of_puppets_perk_gen_cost }
}

ancient_magic_max_mana_perks = {
	value = 0
	# Time tree
	add = { value = time_mage_perk_bit multiply = time_mage_perk_max_mana }
	add = { value = glimpse_the_future_perk_bit multiply = glimpse_the_future_perk_max_mana }
	add = { value = financial_times_perk_bit multiply = financial_times_perk_max_mana }
	add = { value = celerity_perk_bit multiply = celerity_perk_max_mana }
	add = { value = mass_celerity_perk_bit multiply = mass_celerity_perk_max_mana }
	add = { value = slowness_perk_bit multiply = slowness_perk_max_mana }
	add = { value = mass_slowness_perk_bit multiply = mass_slowness_perk_max_mana }
	add = { value = temporal_manipulation_perk_bit multiply = temporal_manipulation_perk_max_mana }
	add = { value = master_of_time_perk_bit multiply = master_of_time_perk_max_mana }

	# Life tree
	add = { value = life_mage_perk_bit multiply = life_mage_perk_max_mana }
	add = { value = inward_reflection_perk_bit multiply = inward_reflection_perk_max_mana }
	add = { value = inward_perfection_perk_bit multiply = inward_perfection_perk_max_mana }
	add = { value = heal_perk_bit multiply = heal_perk_max_mana }
	add = { value = greater_heal_perk_bit multiply = greater_heal_perk_max_mana }
	add = { value = battlefield_life_mage_perk_bit multiply = battlefield_life_mage_perk_max_mana }
	add = { value = greater_battlefield_life_mage_perk_bit multiply = greater_battlefield_life_mage_perk_max_mana }
	add = { value = purity_of_body_perk_bit multiply = purity_of_body_perk_max_mana }
	add = { value = avatar_of_life_perk_bit multiply = avatar_of_life_perk_max_mana }

	# Elemental tree
	add = { value = elemental_mage_perk_bit multiply = elemental_mage_perk_max_mana }
	add = { value = flame_aura_perk_bit multiply = flame_aura_perk_max_mana }
	add = { value = flaming_weapons_perk_bit multiply = flaming_weapons_perk_max_mana }
	add = { value = living_earthworks_perk_bit multiply = living_earthworks_perk_max_mana }
	add = { value = golem_creation_perk_bit multiply = golem_creation_perk_max_mana }
	add = { value = control_water_perk_bit multiply = control_water_perk_max_mana }
	add = { value = drought_perk_bit multiply = drought_perk_max_mana }
	add = { value = elemental_warrior_perk_bit multiply = elemental_warrior_perk_max_mana }
	add = { value = lord_of_the_elements_perk_bit multiply = lord_of_the_elements_perk_max_mana }

	# Death tree
	add = { value = death_mage_perk_bit multiply = death_mage_perk_max_mana }
	add = { value = inflict_illness_perk_bit multiply = inflict_illness_perk_max_mana }
	add = { value = plague_lord_perk_bit multiply = plague_lord_perk_max_mana }
	add = { value = aura_of_death_perk_bit multiply = aura_of_death_perk_max_mana }
	add = { value = necromancy_perk_bit multiply = necromancy_perk_max_mana }
	add = { value = drain_life_perk_bit multiply = drain_life_perk_max_mana }
	add = { value = death_stare_perk_bit multiply = death_stare_perk_max_mana }
	add = { value = blight_perk_bit multiply = blight_perk_max_mana }
	add = { value = deacon_of_death_perk_bit multiply = deacon_of_death_perk_max_mana }

	# Biomancy tree
	add = { value = biomancy_mage_perk_bit multiply = biomancy_mage_perk_max_mana }
	add = { value = improve_trait_perk_bit multiply = improve_trait_perk_max_mana }
	add = { value = perfect_trait_perk_bit multiply = perfect_trait_perk_max_mana }
	add = { value = fertility_control_perk_bit multiply = fertility_control_perk_max_mana }
	add = { value = impregnate_perk_bit multiply = impregnate_perk_max_mana }
	add = { value = weaken_trait_perk_bit multiply = weaken_trait_perk_max_mana }
	add = { value = criple_trait_perk_bit multiply = criple_trait_perk_max_mana }
	add = { value = sculpter_of_flesh_perk_bit multiply = sculpter_of_flesh_perk_max_mana }
	add = { value = architect_of_bloodlines_perk_bit multiply = architect_of_bloodlines_perk_max_mana }

	# Domination tree
	add = { value = domination_mage_perk_bit multiply = domination_mage_perk_max_mana }
	add = { value = entrance_perk_bit multiply = entrance_perk_max_mana }
	add = { value = incite_lust_perk_bit multiply = incite_lust_perk_max_mana }
	add = { value = incite_obedience_perk_bit multiply = incite_obedience_perk_max_mana }
	add = { value = dominate_perk_bit multiply = dominate_perk_max_mana }
	add = { value = beguiling_aura_perk_bit multiply = beguiling_aura_perk_max_mana }
	add = { value = friendship_perk_bit multiply = friendship_perk_max_mana }
	add = { value = enchanting_aura_perk_bit multiply = enchanting_aura_perk_max_mana }
	add = { value = master_of_puppets_perk_bit multiply = master_of_puppets_perk_max_mana }
}

###########
# Utility
###########

inc = { value = this add = 1 }
dec = { value = this add = -1 }
par = { value = this modulo = 2 }
div2 = { value = this divide = 2 }
clearbit00 = { value = this subtract = par.abs }
bitshift01 = { value = clearbit00.div2 }
bitshift02 = { value = bitshift01.bitshift01 }
bitshift04 = { value = bitshift02.bitshift02 }
bitshift08 = { value = bitshift04.bitshift04 }
bitshift16 = { value = bitshift08.bitshift08 }

bit00 = { value = par }
bit01 = { value = bitshift01.par }
bit02 = { value = bitshift02.par }
bit03 = { value = bitshift02.bitshift01.par }
bit04 = { value = bitshift04.par }
bit05 = { value = bitshift04.bitshift01.par }
bit06 = { value = bitshift04.bitshift02.par }
bit07 = { value = bitshift04.bitshift02.bitshift01.par }
bit08 = { value = bitshift08.par }
bit09 = { value = bitshift08.bitshift01.par }
bit10 = { value = bitshift08.bitshift02.par }
bit11 = { value = bitshift08.bitshift02.bitshift01.par }
bit12 = { value = bitshift08.bitshift04.par }
bit13 = { value = bitshift08.bitshift04.bitshift01.par }
bit14 = { value = bitshift08.bitshift04.bitshift02.par }
bit15 = { value = bitshift08.bitshift04.bitshift02.bitshift01.par }
bit16 = { value = bitshift16.par }
bit17 = { value = bitshift16.bitshift01.par }
bit18 = { value = bitshift16.bitshift02.par }
bit19 = { value = bitshift16.bitshift02.bitshift01.par }
bit20 = { value = bitshift16.bitshift04.par }
bit21 = { value = bitshift16.bitshift04.bitshift01.par }
bit22 = { value = bitshift16.bitshift04.bitshift02.par }
bit23 = { value = bitshift16.bitshift04.bitshift02.bitshift01.par }
bit24 = { value = bitshift16.bitshift08.par }
bit25 = { value = bitshift16.bitshift08.bitshift01.par }
bit26 = { value = bitshift16.bitshift08.bitshift02.par }
bit27 = { value = bitshift16.bitshift08.bitshift02.bitshift01.par }
bit28 = { value = bitshift16.bitshift08.bitshift04.par }
bit29 = { value = bitshift16.bitshift08.bitshift04.bitshift01.par }
bit30 = { value = bitshift16.bitshift08.bitshift04.bitshift02.par }
bit31 = { value = bitshift16.bitshift08.bitshift04.bitshift02.bitshift01.par }

flip00 = { value = this if = { limit = { bit00 = 0 } add = 1 } else = { subtract = 1 } }
flip01 = { value = this if = { limit = { bit01 = 0 } add = 2 } else = { subtract = 2 } }
flip02 = { value = this if = { limit = { bit02 = 0 } add = 4 } else = { subtract = 4 } }
flip03 = { value = this if = { limit = { bit03 = 0 } add = 8 } else = { subtract = 8 } }
flip04 = { value = this if = { limit = { bit04 = 0 } add = 16 } else = { subtract = 16 } }
flip05 = { value = this if = { limit = { bit05 = 0 } add = 32 } else = { subtract = 32 } }
flip06 = { value = this if = { limit = { bit06 = 0 } add = 64 } else = { subtract = 64 } }
flip07 = { value = this if = { limit = { bit07 = 0 } add = 128 } else = { subtract = 128 } }
flip08 = { value = this if = { limit = { bit08 = 0 } add = 256 } else = { subtract = 256 } }
flip09 = { value = this if = { limit = { bit09 = 0 } add = 512 } else = { subtract = 512 } }
flip10 = { value = this if = { limit = { bit10 = 0 } add = 1024 } else = { subtract = 1024 } }
flip11 = { value = this if = { limit = { bit11 = 0 } add = 2048 } else = { subtract = 2048 } }
flip12 = { value = this if = { limit = { bit12 = 0 } add = 4096 } else = { subtract = 4096 } }
flip13 = { value = this if = { limit = { bit13 = 0 } add = 8192 } else = { subtract = 8192 } }
flip14 = { value = this if = { limit = { bit14 = 0 } add = 16384 } else = { subtract = 16384 } }
flip15 = { value = this if = { limit = { bit15 = 0 } add = 32768 } else = { subtract = 32768 } }
flip16 = { value = this if = { limit = { bit16 = 0 } add = 65536 } else = { subtract = 65536 } }
flip17 = { value = this if = { limit = { bit17 = 0 } add = 131072 } else = { subtract = 131072 } }
flip18 = { value = this if = { limit = { bit18 = 0 } add = 262144 } else = { subtract = 262144 } }
flip19 = { value = this if = { limit = { bit19 = 0 } add = 524288 } else = { subtract = 524288 } }
flip20 = { value = this if = { limit = { bit20 = 0 } add = 1048576 } else = { subtract = 1048576 } }
flip21 = { value = this if = { limit = { bit21 = 0 } add = 2097152 } else = { subtract = 2097152 } }
flip22 = { value = this if = { limit = { bit22 = 0 } add = 4194304 } else = { subtract = 4194304 } }
flip23 = { value = this if = { limit = { bit23 = 0 } add = 8388608 } else = { subtract = 8388608 } }
flip24 = { value = this if = { limit = { bit24 = 0 } add = 16777216 } else = { subtract = 16777216 } }
flip25 = { value = this if = { limit = { bit25 = 0 } add = 33554432 } else = { subtract = 33554432 } }
flip26 = { value = this if = { limit = { bit26 = 0 } add = 67108864 } else = { subtract = 67108864 } }
flip27 = { value = this if = { limit = { bit27 = 0 } add = 134217728 } else = { subtract = 134217728 } }
flip28 = { value = this if = { limit = { bit28 = 0 } add = 268435456 } else = { subtract = 268435456 } }
flip29 = { value = this if = { limit = { bit29 = 0 } add = 536870912 } else = { subtract = 536870912 } }
flip30 = { value = this if = { limit = { bit30 = 0 } add = 1073741824 } else = { subtract = 1073741824 } }
flip31 = { value = this if = { limit = { bit31 = 0 } add = 2147483648 } else = { subtract = 2147483648 } }

set00 = { value = this if = { limit = { bit00 = 0 } add = 1 } }
set01 = { value = this if = { limit = { bit01 = 0 } add = 2 } }
set02 = { value = this if = { limit = { bit02 = 0 } add = 4 } }
set03 = { value = this if = { limit = { bit03 = 0 } add = 8 } }
set04 = { value = this if = { limit = { bit04 = 0 } add = 16 } }
set05 = { value = this if = { limit = { bit05 = 0 } add = 32 } }
set06 = { value = this if = { limit = { bit06 = 0 } add = 64 } }
set07 = { value = this if = { limit = { bit07 = 0 } add = 128 } }
set08 = { value = this if = { limit = { bit08 = 0 } add = 256 } }
set09 = { value = this if = { limit = { bit09 = 0 } add = 512 } }
set10 = { value = this if = { limit = { bit10 = 0 } add = 1024 } }
set11 = { value = this if = { limit = { bit11 = 0 } add = 2048 } }
set12 = { value = this if = { limit = { bit12 = 0 } add = 4096 } }
set13 = { value = this if = { limit = { bit13 = 0 } add = 8192 } }
set14 = { value = this if = { limit = { bit14 = 0 } add = 16384 } }
set15 = { value = this if = { limit = { bit15 = 0 } add = 32768 } }
set16 = { value = this if = { limit = { bit16 = 0 } add = 65536 } }
set17 = { value = this if = { limit = { bit17 = 0 } add = 131072 } }
set18 = { value = this if = { limit = { bit18 = 0 } add = 262144 } }
set19 = { value = this if = { limit = { bit19 = 0 } add = 524288 } }
set20 = { value = this if = { limit = { bit20 = 0 } add = 1048576 } }
set21 = { value = this if = { limit = { bit21 = 0 } add = 2097152 } }
set22 = { value = this if = { limit = { bit22 = 0 } add = 4194304 } }
set23 = { value = this if = { limit = { bit23 = 0 } add = 8388608 } }
set24 = { value = this if = { limit = { bit24 = 0 } add = 16777216 } }
set25 = { value = this if = { limit = { bit25 = 0 } add = 33554432 } }
set26 = { value = this if = { limit = { bit26 = 0 } add = 67108864 } }
set27 = { value = this if = { limit = { bit27 = 0 } add = 134217728 } }
set28 = { value = this if = { limit = { bit28 = 0 } add = 268435456 } }
set29 = { value = this if = { limit = { bit29 = 0 } add = 536870912 } }
set30 = { value = this if = { limit = { bit30 = 0 } add = 1073741824 } }
set31 = { value = this if = { limit = { bit31 = 0 } add = 2147483648 } }

unset00 = { value = this if = { limit = { bit00 = 1 } subtract = 1 } }
unset01 = { value = this if = { limit = { bit01 = 1 } subtract = 2 } }
unset02 = { value = this if = { limit = { bit02 = 1 } subtract = 4 } }
unset03 = { value = this if = { limit = { bit03 = 1 } subtract = 8 } }
unset04 = { value = this if = { limit = { bit04 = 1 } subtract = 16 } }
unset05 = { value = this if = { limit = { bit05 = 1 } subtract = 32 } }
unset06 = { value = this if = { limit = { bit06 = 1 } subtract = 64 } }
unset07 = { value = this if = { limit = { bit07 = 1 } subtract = 128 } }
unset08 = { value = this if = { limit = { bit08 = 1 } subtract = 256 } }
unset09 = { value = this if = { limit = { bit09 = 1 } subtract = 512 } }
unset10 = { value = this if = { limit = { bit10 = 1 } subtract = 1024 } }
unset11 = { value = this if = { limit = { bit11 = 1 } subtract = 2048 } }
unset12 = { value = this if = { limit = { bit12 = 1 } subtract = 4096 } }
unset13 = { value = this if = { limit = { bit13 = 1 } subtract = 8192 } }
unset14 = { value = this if = { limit = { bit14 = 1 } subtract = 16384 } }
unset15 = { value = this if = { limit = { bit15 = 1 } subtract = 32768 } }
unset16 = { value = this if = { limit = { bit16 = 1 } subtract = 65536 } }
unset17 = { value = this if = { limit = { bit17 = 1 } subtract = 131072 } }
unset18 = { value = this if = { limit = { bit18 = 1 } subtract = 262144 } }
unset19 = { value = this if = { limit = { bit19 = 1 } subtract = 524288 } }
unset20 = { value = this if = { limit = { bit20 = 1 } subtract = 1048576 } }
unset21 = { value = this if = { limit = { bit21 = 1 } subtract = 2097152 } }
unset22 = { value = this if = { limit = { bit22 = 1 } subtract = 4194304 } }
unset23 = { value = this if = { limit = { bit23 = 1 } subtract = 8388608 } }
unset24 = { value = this if = { limit = { bit24 = 1 } subtract = 16777216 } }
unset25 = { value = this if = { limit = { bit25 = 1 } subtract = 33554432 } }
unset26 = { value = this if = { limit = { bit26 = 1 } subtract = 67108864 } }
unset27 = { value = this if = { limit = { bit27 = 1 } subtract = 134217728 } }
unset28 = { value = this if = { limit = { bit28 = 1 } subtract = 268435456 } }
unset29 = { value = this if = { limit = { bit29 = 1 } subtract = 536870912 } }
unset30 = { value = this if = { limit = { bit30 = 1 } subtract = 1073741824 } }
unset31 = { value = this if = { limit = { bit31 = 1 } subtract = 2147483648 } }

and = {
	value = 0
	if = { limit = { bit00 = 1 prev.bit00 = 1 } add = 1 }
	if = { limit = { bit01 = 1 prev.bit01 = 1 } add = 2 }
	if = { limit = { bit02 = 1 prev.bit02 = 1 } add = 4 }
	if = { limit = { bit03 = 1 prev.bit03 = 1 } add = 8 }
	if = { limit = { bit04 = 1 prev.bit04 = 1 } add = 16 }
	if = { limit = { bit05 = 1 prev.bit05 = 1 } add = 32 }
	if = { limit = { bit06 = 1 prev.bit06 = 1 } add = 64 }
	if = { limit = { bit07 = 1 prev.bit07 = 1 } add = 128 }
	if = { limit = { bit08 = 1 prev.bit08 = 1 } add = 256 }
	if = { limit = { bit09 = 1 prev.bit09 = 1 } add = 512 }
	if = { limit = { bit10 = 1 prev.bit10 = 1 } add = 1024 }
	if = { limit = { bit11 = 1 prev.bit11 = 1 } add = 2048 }
	if = { limit = { bit12 = 1 prev.bit12 = 1 } add = 4096 }
	if = { limit = { bit13 = 1 prev.bit13 = 1 } add = 8192 }
	if = { limit = { bit14 = 1 prev.bit14 = 1 } add = 16384 }
	if = { limit = { bit15 = 1 prev.bit15 = 1 } add = 32768 }
	if = { limit = { bit16 = 1 prev.bit16 = 1 } add = 65536 }
	if = { limit = { bit17 = 1 prev.bit17 = 1 } add = 131072 }
	if = { limit = { bit18 = 1 prev.bit18 = 1 } add = 262144 }
	if = { limit = { bit19 = 1 prev.bit19 = 1 } add = 524288 }
	if = { limit = { bit20 = 1 prev.bit20 = 1 } add = 1048576 }
	if = { limit = { bit21 = 1 prev.bit21 = 1 } add = 2097152 }
	if = { limit = { bit22 = 1 prev.bit22 = 1 } add = 4194304 }
	if = { limit = { bit23 = 1 prev.bit23 = 1 } add = 8388608 }
	if = { limit = { bit24 = 1 prev.bit24 = 1 } add = 16777216 }
	if = { limit = { bit25 = 1 prev.bit25 = 1 } add = 33554432 }
	if = { limit = { bit26 = 1 prev.bit26 = 1 } add = 67108864 }
	if = { limit = { bit27 = 1 prev.bit27 = 1 } add = 134217728 }
	if = { limit = { bit28 = 1 prev.bit28 = 1 } add = 268435456 }
	if = { limit = { bit29 = 1 prev.bit29 = 1 } add = 536870912 }
	if = { limit = { bit30 = 1 prev.bit30 = 1 } add = 1073741824 }
	if = { limit = { bit31 = 1 prev.bit31 = 1 } add = 2147483648 }
}
or = {
	value = 0
	if = { limit = { OR = { bit00 = 1 prev.bit00 = 1 } } add = 1 }
	if = { limit = { OR = { bit01 = 1 prev.bit01 = 1 } } add = 2 }
	if = { limit = { OR = { bit02 = 1 prev.bit02 = 1 } } add = 4 }
	if = { limit = { OR = { bit03 = 1 prev.bit03 = 1 } } add = 8 }
	if = { limit = { OR = { bit04 = 1 prev.bit04 = 1 } } add = 16 }
	if = { limit = { OR = { bit05 = 1 prev.bit05 = 1 } } add = 32 }
	if = { limit = { OR = { bit06 = 1 prev.bit06 = 1 } } add = 64 }
	if = { limit = { OR = { bit07 = 1 prev.bit07 = 1 } } add = 128 }
	if = { limit = { OR = { bit08 = 1 prev.bit08 = 1 } } add = 256 }
	if = { limit = { OR = { bit09 = 1 prev.bit09 = 1 } } add = 512 }
	if = { limit = { OR = { bit10 = 1 prev.bit10 = 1 } } add = 1024 }
	if = { limit = { OR = { bit11 = 1 prev.bit11 = 1 } } add = 2048 }
	if = { limit = { OR = { bit12 = 1 prev.bit12 = 1 } } add = 4096 }
	if = { limit = { OR = { bit13 = 1 prev.bit13 = 1 } } add = 8192 }
	if = { limit = { OR = { bit14 = 1 prev.bit14 = 1 } } add = 16384 }
	if = { limit = { OR = { bit15 = 1 prev.bit15 = 1 } } add = 32768 }
	if = { limit = { OR = { bit16 = 1 prev.bit16 = 1 } } add = 65536 }
	if = { limit = { OR = { bit17 = 1 prev.bit17 = 1 } } add = 131072 }
	if = { limit = { OR = { bit18 = 1 prev.bit18 = 1 } } add = 262144 }
	if = { limit = { OR = { bit19 = 1 prev.bit19 = 1 } } add = 524288 }
	if = { limit = { OR = { bit20 = 1 prev.bit20 = 1 } } add = 1048576 }
	if = { limit = { OR = { bit21 = 1 prev.bit21 = 1 } } add = 2097152 }
	if = { limit = { OR = { bit22 = 1 prev.bit22 = 1 } } add = 4194304 }
	if = { limit = { OR = { bit23 = 1 prev.bit23 = 1 } } add = 8388608 }
	if = { limit = { OR = { bit24 = 1 prev.bit24 = 1 } } add = 16777216 }
	if = { limit = { OR = { bit25 = 1 prev.bit25 = 1 } } add = 33554432 }
	if = { limit = { OR = { bit26 = 1 prev.bit26 = 1 } } add = 67108864 }
	if = { limit = { OR = { bit27 = 1 prev.bit27 = 1 } } add = 134217728 }
	if = { limit = { OR = { bit28 = 1 prev.bit28 = 1 } } add = 268435456 }
	if = { limit = { OR = { bit29 = 1 prev.bit29 = 1 } } add = 536870912 }
	if = { limit = { OR = { bit30 = 1 prev.bit30 = 1 } } add = 1073741824 }
	if = { limit = { OR = { bit31 = 1 prev.bit31 = 1 } } add = 2147483648 }
}
not = { value = this add = 1 multiply = -1 }

abs = {
	value = this
	if = {
		limit = { this < 0 }
		multiply = -1
	}
}

neg = {
	value = this
	if = {
		limit = { this > 0 }
		multiply = -1
	}
}

sum_n = {
	value = this
	add = 1
	multiply = this
	divide = 2
}

tri = {
	ordered_province = {
		limit = {
			has_variable = tri_sum
			var:tri_sum < prev
		}
		order_by = var:tri_num
		position = 0
		value = var:tri_num
	}
}
