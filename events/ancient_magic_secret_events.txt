#Events for having magic secrets

namespace = magic_secrets

#I have been exposed as a Mage
# by Ginger
magic_secrets.0001 = {
	type = character_event
	title = secrets.0001.t
	desc = magic_secrets.0001.desc
	theme = secret
	right_portrait = scope:secret_exposer

	immediate = {
		secret_exposed_owner_effects_effect = { SECRET = scope:secret POV = root }
		secret_exposed_owner_opinion_effects_effect = yes
		play_music_cue = "mx_cue_stress"
	}

	option = {
		name = magic_secrets.0001.a
	}
}

#Someone I care about has been exposed as a mage
magic_secrets.0002 = {
	type = character_event
	title = secrets.0106.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner } }
				desc = magic_secrets.0002.negative.desc
			}
			desc = magic_secrets.0002.positive_1.desc
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					any_secret = { secret_type = secret_mage }
				}
				desc = magic_secrets.0002.worried.desc
			}
			triggered_desc = {
				trigger = { NOT = { has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner } } }
				desc = magic_secrets.0002.positive_2.desc
			}
		}
	}
	theme = secret
	override_background = {
		trigger = { allowed_to_imprison_character_trigger = { CHARACTER = scope:owner } } # Show throne room if you can order imprisonment
		event_background = throne_room
	}
	left_portrait = scope:owner
	right_portrait = scope:secret_exposer

	immediate = {
		secret_exposed_notification_effects_effect = { SECRET = scope:secret CHARACTER = scope:owner }

		play_music_cue = "mx_cue_secret"
	}

	#OK
	option = {
		trigger = {
			NAND = {
				allowed_to_imprison_character_trigger = { CHARACTER = scope:owner }
				trait_is_criminal_in_faith_trigger = { TRAIT = mage FAITH = root.faith GENDER_CHARACTER = scope:owner }
			}
		}
		name = {
			trigger = {
				has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner }
				opinion = {
					target = scope:owner
					value >= high_positive_opinion
				}
			}
			text = secrets.0106.likes_negative
		}
		name = {
			trigger = {
				has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner }
				opinion = {
					target = scope:owner
					value < high_positive_opinion
				}
			}
			text = magic_secrets.0002.dislikes_negative
		}
		name = {
			trigger = {
				NOT = { has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner } }
				opinion = {
					target = scope:owner
					value >= high_positive_opinion
				}
			}
			text = magic_secrets.0002.likes_positive
		}
		name = {
			trigger = {
				NOT = { has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner } }
				opinion = {
					target = scope:owner
					value < high_positive_opinion
				}
			}
			text = secrets.0106.dislikes_positive
		}	
	}

	#For liege: imprison
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:owner }
			trait_is_criminal_in_faith_trigger = { TRAIT = mage FAITH = root.faith GENDER_CHARACTER = scope:owner }
		}
		name = magic_secrets.0002.b

		imprison_character_effect = {
			TARGET = scope:owner
			IMPRISONER = root
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = zealous
				add = 100
			}
			modifier = {
				opinion = {
					target = scope:owner
					value < 0
				}
				add = 100
			}
			modifier = {
				OR = {
					is_close_family_of = scope:owner
					is_spouse_of = scope:owner
					has_relation_lover = scope:owner
					has_relation_friend = scope:owner
				}
				add = -100
			}
		}
	}

	#For liege: forgive
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:owner }
			trait_is_criminal_in_faith_trigger = { TRAIT = mage FAITH = root.faith GENDER_CHARACTER = scope:owner }
		}
		name = magic_secrets.0002.c

		reverse_add_opinion = {
			target = scope:owner
			modifier = grateful_opinion
			opinion = 20
		}

		add_piety_level = -1

		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = cynical
				add = 100
			}
			modifier = {
				scope:owner = { is_ai = no }
				add = 50
			}
			modifier = {
				NOT = { has_negative_attitude_towards_trait_trigger = { TRAIT = mage GENDER_CHARACTER = scope:owner } }
				add = 100
			}
		}
	}
}
