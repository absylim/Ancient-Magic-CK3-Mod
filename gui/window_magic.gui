types MagicWindow  {
	type magic_window_view = window {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		parentanchor = center
		layer = windows_layer
		allow_outside = yes
		select_spell_target_view = {}
		spell_parameters_view = {}
		#visible = "[GetVariableSystem.Exists('window_magic_view')]"
		visible = "[GetScriptedGui('is_magic_window_open').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		using = Window_Background
		using = Window_Decoration
		using = Animation_ShowHide_Standard

		state = {
			name = _show
			on_start = "[GetVariableSystem.Set('current_spell_selected','dummy_spell')]"
		}

		state = {
			name = _hide
			on_start = "[GetVariableSystem.Clear( 'select_spell_target' )]"
			on_start = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
		}

		vbox = {
			using = Window_Margins
			restrictparent_min = yes

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "MAGIC_VIEW"
				}

				blockoverride "button_close"
				{
					onclick = "[GetScriptedGui('toggle_magic_window').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 30 10 }
					text_single = {
						text = "MAGE_LEVEL"
					}
					expand = {}
					text_single = {
						text = "MAGE_XP_TNL"
					}
				}
				scrollarea = {
					name = "spell_categories_scrollarea"
					layoutpolicy_horizontal = expanding

					size = { 660 81 }
					scrollbarpolicy_vertical = always_off
					scrollbar_horizontal = {
						using = Scrollbar_Horizontal
					}
					scrollwidget = {
						dynamicgridbox = {
							datacontext = "[GetPlayer]"
							layoutpolicy_vertical = expanding
							allow_outside = yes
							ignoreinvisible = yes
							flipdirection = yes
							maxhorizontalslots = 100
							maxverticalslots = 1
							block "datamodel" {
								datamodel = "[GetGlobalList('spell_categories_list')]"
							}
							item = {
								widget = {
									#datacontext = "[Scope.GetFlagName]"
									block "size" {
										size = { 80 90 }
									}
									hbox = {
										button_tertiary = {
											onclick = "[GetVariableSystem.Set('current_category',Scope.GetFlagName)]"
											enabled = "[Not(GetVariableSystem.HasValue('current_category',Scope.GetFlagName))]"
											flowcontainer = {
												resizeparent = yes
												text_single = {
													text = "[Localize(Concatenate(Concatenate('@icon_',Scope.GetFlagName), '_category!'))]"
													fontsize = 16
												}
											}
											size = { 80 80 }
											tooltip = "[Localize(Concatenate(Scope.GetFlagName,'_category'))]"
										}
										expand = {}
									}
								}
							}
						}
					}
				}
				scrollbox = {
					name = "get_all_spells"
					size = { 630 300 }

					layoutpolicy_horizontal = expanding

					blockoverride "scrollbox_content"
					{
						dynamicgridbox = {
							datacontext = "[GetPlayer]"
							layoutpolicy_vertical = expanding
							allow_outside = yes
							ignoreinvisible = yes
							maxhorizontalslots = 1
							maxverticalslots = 100
							block "datamodel" {
								datamodel = "[GetGlobalList(Concatenate(GetVariableSystem.Get('current_category'),'_spells_list'))]"
							}
							item = {
								widget = {
									visible = "[GetScriptedGui(Concatenate(Scope.GetFlagName,'_spellbook')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).End)]"
									size = { 630 58 }
									button_standard_clean = {
										size = { 100% 85% }
										enabled = "[GetScriptedGui(Concatenate(Scope.GetFlagName,'_spellbook')).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).End)]"
										down = "[GetVariableSystem.HasValue('current_spell_selected',Scope.GetFlagName)]"
										onclick = "[GetScriptedGui('clear_list_options').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetVariableSystem.Set('current_spell_selected',Scope.GetFlagName)]"
										hbox = {
											margin = { 10 0 }
											spacer = { size = { 15 0 } }
											text_single = {
												text = "[Localize(Concatenate(Scope.GetFlagName,'_name'))]"
												minimumsize = { 160 -1 }
											}
											expand = {}
											icon = {
												texture = "gfx/magic/MagicIcon.dds"
												size = { 15 23 }
											}
											spacer = { size = { 5 0 } }
											text_single = {
												text = "[Abs_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Scope.GetFlagName,'_cost')))|0]"
												minimumsize = { 30 -1 }
											}
											spacer = { size = { 15 0 } }
										}
									}
								}
							}
						}
					}
				}
				spacer = { size = { 0 20 } }
				text_multi = {
					margin = { 20 20 }
					visible = "[GetVariableSystem.Exists('current_spell_selected')]"
					text = "[Localize(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_desc'))]"
					size = { 600 100 }
					align = center
					using = Background_Area_Dark
				}

				spacer = { size = { 0 40 } }

				hbox = {
					layoutpolicy_horizontal = expanding
					spacer = { size = { 20 0 } }
					vbox = {
						datacontext = "[GetPlayer.MakeScope.Var('spell_target').GetCharacter]"
						portrait_shoulders_magic = {}
					}
					spacer = { size = { 20 0 } }
					vbox = {
						layoutpolicy_vertical = expanding
						text_multi = {
							margin = { 20 20 }
							visible = "[GetVariableSystem.Exists('current_spell_selected')]"
							text = "[GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('selected_spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).End)]"
							size = { 400 160 }
							align = center
							using = Background_Area_Dark
						}
						expand = {}
					}
					expand = {}
				}
				spacer = { size = { 0 20 } }
				hbox = {
					layoutpolicy_horizontal = expanding
					expand = {}
					button_tertiary_magic = {
						text = "CAST_SPELL"
						enabled = "[And(GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).End),GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('selected_spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).End))]"
						tooltip = "[GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('selected_spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).End)]"
						onclick = "[GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('selected_spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).End)]"
						onclick = "[GetScriptedGui('toggle_magic_window').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
					}
					spacer = { size = { 20 0 } }
					icon = {
						texture = "gfx/magic/MagicIcon.dds"
						size = { 31 46 }
					}
					vbox = {
						text_single = {
							text = "CURRENT_MANA"
						}
						text_single = {
							text = "CURRENT_MANA_NUM"
						}
					}
					spacer = { size = { 30 0 } }
				}
				expand = {}
				spacer = { size = { 0 20 } }
			}
		}
	}

	type select_spell_target_view = window {
		size = { 350 500 }
		position = {-700 422 }
		parentanchor = top|right
		layer = windows_layer
		allow_outside = yes
		visible = "[GetVariableSystem.Exists('select_spell_target')]"

		using = Window_Background
		using = Window_Decoration
		using = Animation_ShowHide_Standard

		vbox = {
			using = Window_Margins
			restrictparent_min = yes

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "SELECT_SPELL_TARGET"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear( 'select_spell_target' )]"
				}
			}

			scrollbox = {
				name = "get_targets"
				size = { 300 400 }

				blockoverride "scrollbox_content"
				{
					dynamicgridbox = {
						datacontext = "[GetPlayer]"
						layoutpolicy_vertical = expanding
						allow_outside = yes
						ignoreinvisible = yes
						maxhorizontalslots = 1
						maxverticalslots = 255
						block "datamodel" {
							datamodel = "[GetPlayer.MakeScope.GetList('spell_candidates')]"
						}
						item = {
							widget = {
								datacontext = "[Scope.GetCharacter]"
								visible = "[GetScriptedGui(GetVariableSystem.Get('current_spell_selected')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',Scope.Char.MakeScope).End)]"
								block "size" {
									size = { 300 90 }
								}
								button_tertiary = {
									onclick = "[GetScriptedGui('select_character_target').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',Scope.Char.MakeScope).End)]"
									onclick = "[GetVariableSystem.Clear( 'select_spell_target' )]"
									flowcontainer = {
										resizeparent = yes
										spacer = { size = { 15 0 } }
										portrait_head_small = {}
										spacer = { size = { 15 0 } }
										flowcontainer = {
											ignoreinvisible = yes
											direction = vertical
											spacer = {
												size = { 0 14 }
											}
											text_single = {
												fontsize = 16
												text = "SELECT_THIS"
												default_format = "#italic"
											}
											text_single = {
												text = "[Character.GetTitleAsNameNoTooltip]"
												fontsize = 16
												default_format = "#F"
												minimumsize = { 150 -1 }
												visible = "[Character.HasLandedTitles]"
											}
											text_single = {
												text = "[Character.GetFirstName]"
												fontsize = 18
												default_format = "#high"
												minimumsize = { 150 -1 }
											}
										}
									}
									expand = {}
								}
							}
						}
					}
				}
			}

			expand = {}
		}
	}

	type spell_parameters_view = window {
		size = { 350 500 }
		position = { 320 422 }
		parentanchor = top|right
		layer = windows_layer
		allow_outside = yes
		visible = "[GetScriptedGui(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_has_properties')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		using = Window_Background
		using = Window_Decoration
		using = Animation_ShowHide_Standard

		vbox = {
			using = Window_Margins
			restrictparent_min = yes

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "SPELL_PARAMETERS"
				}
			}

			spacer = { size = { 0 20 } }

			hbox = {
				visible = "[GetScriptedGui(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_has_properties')).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				button = {
					texture = "gfx/magic/icons/window_back.dds"
					modify_texture = {
						texture = "gfx/interface/colors/colors_textured.dds"
						blend_mode = add
						framesize = { 96 96 }

						block "master_color_frame" {
							frame = 1
						}
					}
					size = { 50 50 }
					onclick = "[GetScriptedGui('decrease_times_repeated').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					enabled = "[GetScriptedGui('decrease_times_repeated').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}
				text_single = {
					text = "REPEAT_X_TIMES"
					fontsize = 18
					minimumsize = { 60 -1 }
					align = center
				}
				button = {
					texture = "gfx/magic/icons/window_forward.dds"
					modify_texture = {
						texture = "gfx/interface/colors/colors_textured.dds"
						blend_mode = add
						framesize = { 96 96 }

						block "master_color_frame" {
							frame = 1
						}
					}
					size = { 50 50 }
					onclick = "[GetScriptedGui('increase_times_repeated').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).AddScope('spell_cost',MakeScopeValue(GetPlayer.MakeScope.ScriptValue(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_cost')))).End)]"
					enabled = "[GetScriptedGui('increase_times_repeated').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).AddScope('spell_cost',MakeScopeValue(GetPlayer.MakeScope.ScriptValue(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_cost')))).End)]"
				}
			}

			scrollbox = {
				name = "get_spell_list"
				visible = "[GetScriptedGui(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_has_list')).IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					fixedgridbox = {
						datacontext = "[GetPlayer]"
						addcolumn = 250
						addrow = 50
						datamodel_reuse_widgets = yes
						datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_list'))]"
						item = {
							widget = {
								size = { 100% 100% }
								button_standard_clean = {
									tooltip = "[GetScriptedGui(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_has_list')).IsValidTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('list_option',MakeScopeFlag(Scope.GetFlagName)).End)]"
									enabled = "[GetScriptedGui(Concatenate(GetVariableSystem.Get('current_spell_selected'),'_has_list')).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('spell_target',GetPlayer.MakeScope.Var('spell_target').Char.MakeScope).AddScope('list_option',MakeScopeFlag(Scope.GetFlagName)).End)]"
									down = "[GetScriptedGui('select_list_option').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('list_option',MakeScopeFlag(Scope.GetFlagName)).End)]"
									onclick = "[GetScriptedGui('select_list_option').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('list_option',MakeScopeFlag(Scope.GetFlagName)).AddScope('selected_spell',MakeScopeFlag(GetVariableSystem.Get('current_spell_selected'))).End)]"
									flowcontainer = {
										resizeparent = yes
										margin = { 10 10 }
										spacer = { size = { 15 0 } }
										text_single = {
											text = "[Localize(Concatenate(Scope.GetFlagName,'_list_name'))]"
											minimumsize = { 200% -1 }
										}
										expand = {}
									}
									expand = {}
								}
							}
						}
					}
				}
			}
			expand = {}
			spacer = { size = { 0 20 } }
		}
	}

	type button_tertiary_magic = button_frontend
	{
		size = { 300 40 }
		texture = "gfx/interface/buttons/button_tertiary.dds"

		gfxtype = framedbuttongfx
		effectname = "NoHighlight"
		upframe = 1
		overframe = 2
		downframe = 3
		framesize = { 210 36 }


		spriteType = Corneredtiled
		spriteborder = { 22 20 }

		buttonText = {
			text_single = {
				size = { 100% 100% }
				autoresize = no
				margin = { 10 0 }
				align = center|nobaseline
				default_format = "#high"
				using = Font_Size_Small
			}
		}
	}

	type portrait_shoulders_magic = widget {
		size = { 125 160 }
		widget = {
			size = { 100% 100% }
			block "portrait_glows"
			{
				using = Portrait_Background_Glows
			}
		}

		portrait_button = {
			parentanchor = bottom|hcenter
			size = { 145 175 }
			using = portrait_base
			block "portrait_texture"
			{
				portrait_texture = "[Character.GetPortrait('environment_shoulders', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
			}

			mask = "gfx/portraits/portrait_mask_shoulders.dds"
			effectname = "NoHighlight"

			highlight_icon = {
				name = "prison_bars"
				visible = "[Character.IsImprisoned]"
				size = { 100% 100% }
				effectname = "NoHighlight"
				texture = "gfx/portraits/portrait_prison_shoulders.dds"

				modify_texture = {
					name = "mask"
					texture = "gfx/portraits/portrait_mask_shoulders.dds"
					spriteType = Corneredstretched
					blend_mode = alphamultiply
				}
			}

			block "portrait_button" {}
		}

		portrait_status_icons = {
			parentanchor = bottom|right
			position = { 0 -3 }
			scale = 0.85

			background = {
				using = Background_Area_Dark
				margin = { 2 3 }
				alpha = 0.8
			}
		}

		block "coa" {
			coa_realm_small_crown = {
				visible = "[Character.HasLandedTitles]"
				parentanchor = bottom|left
				position = { -5 3 }
			}
		}

		button_round = {
			parentanchor = top|right
			onclick = "[GetVariableSystem.Toggle( 'select_spell_target' )]"
			tooltip = SELECT_SPELL_TARGET
			icon = {
				texture = "gfx/interface/icons/flat_icons/replace.dds"
				size = { 30 30 }
				modify_texture = {
					texture = "gfx/interface/colors/colors_textured.dds"
					blend_mode = add
					framesize = { 96 96 }

					block "master_color_frame" {
						frame = 1
					}
				}
				parentanchor = hcenter|vcenter
			}
		}

		portrait_opinion = {
			parentanchor = bottom|hcenter
			position = { 0 -2 }
		}

		#portrait unknown glow
		button = {
			position = { -8 -14 }
			size = { 141 174 }
			texture = "gfx/portraits/unknown_portraits/button_unknown_shoulders.dds"
			framesize = { 471 589 }
			gfxtype = framedbuttongfx
			effectname = "NoHighlight"
			upframe = 1
			overframe = 2
			onclick = "[GetVariableSystem.Toggle( 'select_spell_target' )]"

			block "glow_visible" {

				visible = "[Not(Character.IsValid)]"

			}

			block "glow_flip" {}

			block "onclick" {}
		}
	}
}
