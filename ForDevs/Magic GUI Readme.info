####################################
###  Implementing the Magic GUI  ###
###          README              ###
###   by Caden335 and Ginger     ###
####################################

##### INDEX OF THIS FILE #####
1. Introduction

2. Additions
  2a. How to add a new spell to the system
  2b. How to add a new spell category

##### 1. Introduction ######
This magic spellbook system is intended to be as intuitive and painless a method for adding new spells as
we could make it. In CK3, that can be difficult, but hopefully it works out. This system really only
involves the spellbook and casting of spells, mechanisms to unlock spells are left as an exercise to the
reader. Though traditionally they have been lifestyle perks, the method of their unlocking is up to you

##### 2. Additions #####
### 2a. How to add a new spell category
* 'common/scripted_effects/magic_base_effects.txt'
  - <spell_category> - name of the category
  - <spell_category>_spells_list - names of spells that go into the given category

* 'localization/english/magic_gui_l_english.yml'
  - <spell_category>_category - display name of the category

* 'gfx/magic'
  - add artwork for the category
  - should be 80x80

* 'gui/magic_texticons.gui'
  - add an icon entry for your new category

### 2b. How to add a new spell
* 'common/scripted_effects/magic_base_effects.txt'
- Add an entry to one of the category lists
- If you want the player to be able to select multiple list options for your spell at the same time, add an entry to `multiple_option_select_spells`
- If your trait has a list of options and directly edits the target's traits, add an entry to `modify_trait_spells`
- If your spell is an aura (constant effects on a target, with a mana upkeep cost), add an entry to the `drain_auras` list

* 'common/scripted_effects/magic_gui_effects.txt'
If your spell has a list of options for a player to choose:
  - add an effect to generate that list
    - effect name may be anything, but list must be named <spell_name>_list
  - invoke the effect in 'effect_open_magic_window'
  - clear the list in 'effect_close_magic_window'

* 'common/scripted_triggers/01_ancient_magic_triggers.txt'
If the spell is an aura, add a line for it in 'is_magic_aura_trigger'

* 'common/script_values/01_ancient_magic_bitmask_values.txt'
If your spell is an aura, add four script values for it:
  - <spell_name>_aura_bit - for reading if the aura is active
  - <spell_name>_aura_bit_flip - for toggling the aura
  - <spell_name>_aura_bit_set - for turning on the aura
  - <spell_name>_aura_bit_unset - for turning off the aura
NOTE: Be sure to use a mask+bit/flip/set/unset number that is not already taken. Valid values are from 00 to 31

* 'common/script_values/01_ancient_magic_bitmask_values.txt'
If your spell is an aura, add an entry to `ancient_magic_mana_drain_auras` for it
  - your added line should be `add = <spell_name>_gen_cost`

* 'common/script_values/magic_cost_values.txt'
Add an entry for the spell:
  - <spell_name>_cost
If the spell is an aura, add two more entries for the spell:
  - <spell_name>_gen_cost_individual - the mana upkeep to cast it on one person
  - <spell_name>_gen_cost - the mana upkeep for all people it is *currently* cast on
    - NOTE: Do not include pending spell targets, only targets that are already in the target list

* 'common/scripted_guis/magic_scripted_gui_<spell_school>.txt'
Add four entries for your spell
  - <spell_name>
    - is_shown - whether a given spell target can have this spell cast on them
    - is_valid - whether or not the spell is castable
      - the 'cast spell' button includes an is_shown check, so you don't need to check for those conditions in is_valid
    - effect - the effect the spell has when it is cast.
      - NOTE: The spell effect is responsible for calculating and deducting the spell cost, for tooltip purposes (except auras)
      - If your spell is an aura, use `start_aura_effect = { SPELL = <spell_name> }` and `stop_aura_effect = { SPELL = <spell_name> }`
        - `start_aura_effect` and `stop_aura_effect` take care of spell costs for auras
    - scopes:
      - root - character, the caster
      - scope:spell_target - character, the spell's target
    - vars:
      - root.var:repeat_count - script_value/CFixedPoint, number of times to cast the spell
    - root's variable lists:
      - selected_list_options - list of flags, the options chosen by the player. Should use list traversal even if there's only one option chosen
  - <spell_name>_spellbook
    - is_shown - whether or not the spell will appear in the spell book as an option
      - if it's unlocked by a perk, use `has_perk_trigger = { PERK = <perk_key> }` instead of `has_perk`
    - is_valid - whether or not the spell will be selectable in the spell book (though it's generally better to invalidate casting than selection)
    - scopes:
      - root - character, the caster
      - scope:spell_target - character, the spell's target
  - <spell_name>_has_properties
    - is_shown - whether or not the spell should show the properties window (can repeat/has a list)
    - is_valid - whether or not to show the option to multicast in the properties window
    - scopes:
      - root - character, the caster
  - <spell_name>_has_list
    - is_shown - whether or not to show a list of options in the properties window
    - is_valid - whether or not an individual list option is able to be clicked
    - scopes:
      - root - character, the caster
      - scope:spell_target - character, the spell's target
      - scope:list_option - flag, the option to be displayed. only available in is_valid
    - root's variable lists:
      - selected_list_options - list of flags, currently chosen options by the player. This is all options chosen *previously* - all options whose buttons are highlighted on the screen

* 'localization/english/magic_gui_l_english.yml'
 - <spell_name>_name - the name of the spell
 - <spell_name>_desc - spell description
For any list options the spell might have:
 - <option_name>_list_name - name of the option
